HTTP - 
The Hypertext Transfer Protocol 
First usable version of HTTP was created in 1997.
HTTP/1.1. version is still in use on the web. In 2015, a new version of HTTP called HTTP/2 was created.

(HTTP) is the foundation of the World Wide Web, and is used to load web pages using hypertext links. 
It is the basis for almost all web applications. More specifically, HTTP is the method computers and servers use to request and send information.
When someone navigates to some xyz.com on their laptop, their web browser sends an HTTP request to the xyz servers for the content that appears on the page.
Then, xyz servers send HTTP responses with the text, images, and formatting that the browser displays to the user.

Differences between HTTP/2 and HTTP/1.1

Multiplexing: HTTP/1.1 loads resources one after the other, so if one resource cannot be loaded, it blocks all the other resources behind it.
In contrast, HTTP/2 is able to use a single TCP connection to send multiple streams of data at once so that no one resource blocks any other resource. 
HTTP/2 does this by splitting data into binary-code messages and numbering these messages so that the client knows which stream each binary message belongs to.
Small files load more quickly than large ones. To speed up web performance, both HTTP/1.1 and HTTP/2 compress HTTP messages to make them smaller.
HTTP/2 uses a more advanced compression method called HPACK that eliminates redundant information in HTTP header packets. 
This eliminates a few bytes from every HTTP packet.
Given the volume of HTTP packets involved in loading even a single webpage, those bytes add up quickly, resulting in faster loading.


Object
an object is a standalone entity, with properties and type. 
Compare it with a cup, for example. A cup is an object, with properties. A cup has a color, a design, weight, a material it is made of, etc.
The same way, JavaScript objects can have properties, which define their characteristics.
It’s most important data-type and forms the building blocks for modern JavaScript
Objects are quite different from JavaScript’s primitive data-types
(Number, String, Boolean, null, undefined and symbol)
In the sense that while these primitive data-types all store a single value each (depending on their types).
Loosely speaking, objects in JavaScript may be defined as an unordered collection of related data, of primitive or reference types, in the form of “key: value” pairs.
These keys can be variables or functions and are called properties and methods, respectively, in the context of an object.
Eg. If your object is a student, it will have properties like name, age, address, id, etc and methods like updateAddress, updateNam, etc.

ike all JavaScript variables, both the object name (which could be a normal variable) and property name are case sensitive. You can define a property by assigning it a value. 